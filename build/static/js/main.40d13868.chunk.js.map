{"version":3,"sources":["utils/firebase.js","utils/config.js","slices/app.slice.js","components/FontIcon/FontIcon.js","components/FontIcon/index.js","utils/store.js","components/Fallback/Fallback.js","components/Fallback/index.js","routes.js","app.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","analytics","auth","firestore","storage","ref","performance","slice","createSlice","name","initialState","checked","loggedIn","me","reducers","setMe","state","action","payload","setLoggedIn","authenticate","dispatch","onAuthStateChanged","async","actions","user","collection","doc","uid","get","emailVerified","exists","id","data","signup","_ref","fullName","email","password","Promise","resolve","reject","createUserWithEmailAndPassword","sendEmailVerification","set","err","login","_ref2","signInWithEmailAndPassword","Error","logout","signOut","resetPassword","sendPasswordResetEmail","FontIcon","className","style","_jsx","FontAwesomeIcon","icon","defaultProps","loadFontIcons","library","add","faExclamationTriangle","faEnvelopeOpenText","faPaperPlane","store","configureStore","reducer","app","middleware","getDefaultMiddleware","Fallback","useEffect","NProgress","start","done","Default","React","lazy","Dashboard","Rush","Router","BrowserRouter","children","_jsxs","Suspense","fallback","Route","exact","path","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40d13868.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\nimport 'firebase/performance'\nimport 'firebase/analytics'\nimport config from './config'\n\nfirebase.initializeApp(config.firebase)\nfirebase.analytics()\n\nexport const auth = firebase.auth()\nexport const storage = firebase.storage().ref()\nexport const performance = firebase.performance()\nexport const firestore = firebase.firestore()\n\nexport default firebase\n","export default {\n  firebase: {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  },\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { firestore, auth } from 'utils/firebase'\n\n// ------------------------------------\n// State\n// ------------------------------------\n\nconst initialState = {\n  checked: false,\n  loggedIn: false,\n  me: {},\n}\n\n// ------------------------------------\n// Slices\n// -----------------------------------\n\nconst slice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    setMe: (state, action) => ({\n      ...state,\n      me: action.payload.me,\n      loggedIn: action.payload.loggedIn,\n      checked: true,\n    }),\n    setLoggedIn: (state, action) => ({\n      ...state,\n      loggedIn: action.payload,\n    }),\n  },\n})\n\n// ------------------------------------\n// Actions\n// -----------------------------------\n\nexport const authenticate = () => (dispatch) => {\n  auth.onAuthStateChanged(async (me) => {\n    if (!me) {\n      return dispatch(\n        slice.actions.setMe({\n          loggedIn: false,\n          checked: true,\n          me: {},\n        }),\n      )\n    }\n\n    // get user from firestore\n    const user = await firestore.collection('users').doc(me?.uid).get()\n\n    // login\n    return dispatch(\n      slice.actions.setMe({\n        loggedIn: me?.emailVerified && user.exists,\n        me: user.exists\n          ? { id: me?.uid, emailVerified: me?.emailVerified, ...user.data() }\n          : {},\n        checked: true,\n      }),\n    )\n  })\n}\n\nconst signup = ({ fullName, email, password }) => () =>\n  new Promise(async (resolve, reject) => {\n    try {\n      // create user\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password,\n      )\n\n      // send confirmation email\n      await user.sendEmailVerification()\n\n      // store user info in firestore\n      await firestore.collection('users').doc(user.uid).set({\n        fullName,\n        email,\n      })\n\n      resolve(user)\n    } catch (err) {\n      reject(err)\n    }\n  })\n\nconst login = ({ email, password }) => (dispatch) =>\n  new Promise(async (resolve, reject) => {\n    try {\n      const { user } = await auth.signInWithEmailAndPassword(email, password)\n      if (!user) reject(new Error('Failed to login. please try it again later'))\n      if (!user.emailVerified) await user.sendEmailVerification()\n      dispatch(authenticate())\n      resolve(user)\n    } catch (err) {\n      reject(err)\n    }\n  })\n\nconst logout = () => (dispatch) =>\n  new Promise(async (resolve, reject) => {\n    try {\n      await auth.signOut()\n      dispatch(\n        slice.actions.setMe({\n          checked: true,\n          loggedIn: false,\n          me: {},\n        }),\n      )\n      resolve()\n    } catch (err) {\n      reject(err)\n    }\n  })\n\nconst resetPassword = (email) => () => auth.sendPasswordResetEmail(email)\n\n// ------------------------------------\n// Exports\n// ------------------------------------\n\nexport const actions = {\n  ...slice.actions,\n  authenticate,\n  signup,\n  login,\n  logout,\n  resetPassword,\n}\n\nexport default slice.reducer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faExclamationTriangle,\n  faEnvelopeOpenText,\n  faPaperPlane,\n} from '@fortawesome/free-solid-svg-icons'\n\n// TODO: add icons here...\nexport const loadFontIcons = () =>\n  library.add(faExclamationTriangle, faEnvelopeOpenText, faPaperPlane)\n\nconst FontIcon = ({ name, className, style }) => (\n  <FontAwesomeIcon icon={name} className={className} style={style} />\n)\n\nFontIcon.propTypes = {\n  name: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.objectOf(PropTypes.object),\n}\n\nFontIcon.defaultProps = {\n  name: '',\n  className: '',\n  style: {},\n}\n\nexport default FontIcon\n","import FontIcon, { loadFontIcons as load } from './FontIcon'\n\nexport const loadFontIcons = load\n\nexport default FontIcon\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport logger from 'redux-logger'\nimport app from 'slices/app.slice'\n\nconst store = configureStore({\n  reducer: {\n    app,\n  },\n  middleware:\n    process.env.NODE_ENV === 'production'\n      ? [...getDefaultMiddleware()]\n      : [...getDefaultMiddleware(), logger],\n})\n\nexport default store\n","import { useEffect } from 'react'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nconst Fallback = () => {\n  useEffect(() => {\n    NProgress.start()\n    return () => {\n      NProgress.done()\n    }\n  })\n\n  return ''\n}\n\nexport default Fallback\n","import Fallback from './Fallback'\n\nexport default Fallback\n","import React, { Suspense } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n// import Banner from 'components/Banner'; // Import the Banner component\nimport Fallback from 'components/Fallback';\n\n// Lazy loading of pages\nconst Default = React.lazy(() => import('./pages/default'));\nconst Dashboard = React.lazy(() => import('./pages/dashboard'));\nconst Rush = React.lazy(() => import('./pages/rush'));\n// \nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Suspense fallback={<Fallback />}>\n        <Route exact path=\"/\">\n          <Default />\n        </Route>\n        <Route path=\"/rush\">\n          <Rush />\n        </Route>\n        <Route path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n      </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n\n\n/*\nimport React, { Suspense, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { actions } from 'slices/app.slice';\nimport { path } from 'utils/const';\nimport Fallback from 'components/Fallback';\nimport Spinner from 'components/Spinner';\nimport Navbar from 'components/Navbar'; // Make sure to import the Navbar component\n\nconst Default = React.lazy(() => import('./pages/default'));\nconst Auth = React.lazy(() => import('./pages/auth'));\nconst Dashboard = React.lazy(() => import('./pages/dashboard'));\n\nfunction Router() {\n  const dispatch = useDispatch();\n  const { checked, loggedIn } = useSelector((state) => state.app);\n\n  useEffect(() => {\n    dispatch(actions.authenticate());\n  }, [dispatch]); // Dependency array added\n\n  if (!checked) {\n    return (\n      <div className=\"app-loader-container\">\n        <Spinner size=\"4rem\" color=\"white\" isLoading />\n      </div>\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Suspense fallback={<Fallback />}>\n        {!loggedIn ? (\n          <Switch>\n            <Route exact path=\"/\">\n              <Default />\n            </Route>\n            <Route path=\"/auth\">\n              <Auth />\n            </Route>\n          </Switch>\n        ) : (\n          <Switch>\n            <Route path={path.dashboard}>\n              <Dashboard />\n            </Route>\n            <Redirect to={path.dashboard} />\n          </Switch>\n        )}\n      </Suspense>\n    </BrowserRouter>\n  );\n  \n}\n\nexport default Router;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// original routing, / -> Auth\n/*   return (\n  <BrowserRouter>\n  <Suspense fallback={<Fallback />}>\n    {!loggedIn ? (\n      <Switch>\n        <Route path=\"/\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    ) : (\n      <Switch>\n        <Route path={path.dashboard}>\n          <Dashboard />\n        </Route>\n        <Redirect to={path.dashboard} />\n      </Switch>\n    )}\n  </Suspense>\n</BrowserRouter>\n)\n} */ \n","import { useEffect } from 'react'\nimport { Provider } from 'react-redux'\nimport { loadFontIcons } from 'components/FontIcon'\nimport store from 'utils/store'\nimport Router from './routes'\n\nfunction App() {\n  useEffect(() => {\n    loadFontIcons()\n  }, [])\n\n  return (\n    <Provider store={store}>\n      <div data-testid=\"app\" className=\"app\">\n        <Router />\n      </div>\n    </Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from 'app'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'theme/reset.scss'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}